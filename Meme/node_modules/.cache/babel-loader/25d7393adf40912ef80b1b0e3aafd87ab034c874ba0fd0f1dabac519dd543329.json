{"ast":null,"code":"var _jsxFileName = \"/Users/ywblhytr/Desktop/ReactProjects/Meme/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { memeData } from \"../MemeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Meme() {\n  _s();\n  const [data, urlFunc] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    img: \"\"\n  });\n  const [allMemImages, setAllMemeImages] = React.useState({\n    memeData\n  });\n  function memeImage() {\n    const allMemImages = memeData.data.memes;\n    const randomNumber = Math.floor(Math.random() * allMemImages.length);\n    const url = allMemImages[randomNumber].url;\n    urlFunc(prevData => ({\n      ...prevData,\n      img: url\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottop text\",\n        className: \"form--inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--bottom\",\n        onClick: memeImage,\n        children: \"Get a new meme image  \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"d0TnSvb0J4T+IJoC3yLTnGxyd4k=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memeData","Meme","data","urlFunc","useState","topText","bottomText","img","allMemImages","setAllMemeImages","memeImage","memes","randomNumber","Math","floor","random","length","url","prevData"],"sources":["/Users/ywblhytr/Desktop/ReactProjects/Meme/src/components/Meme.js"],"sourcesContent":["import React from \"react\"\nimport { memeData } from \"../MemeData\"\n\n\nexport function Meme(){\n    const [data, urlFunc] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        img: \"\",\n        })\n\n    const [allMemImages ,setAllMemeImages] = React.useState({\n        memeData\n    })\n    function memeImage(){\n        const allMemImages = memeData.data.memes\n        const randomNumber = Math.floor(Math.random() * allMemImages.length)\n        const url = allMemImages[randomNumber].url\n        urlFunc( \n            prevData => ({\n            ...prevData,\n            img: url\n            })\n        )\n    }\n\n    return(\n        <main>\n            <div className=\"form\">\n                <input \n                    \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--inputs\" \n                    />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottop text\"\n                    className=\"form--inputs\" \n                />\n                <button \n                    className=\"form--bottom\"\n                    onClick={memeImage}\n                >\n                    Get a new meme image  ðŸ–¼\n                </button>\n                <img src={data.img}/>\n            </div>\n        </main>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAA;AAGtC,OAAO,SAASC,IAAI,GAAE;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC;IACnCC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,GAAG,EAAE;EACL,CAAC,CAAC;EAEN,MAAM,CAACC,YAAY,EAAEC,gBAAgB,CAAC,GAAGV,KAAK,CAACK,QAAQ,CAAC;IACpDJ;EACJ,CAAC,CAAC;EACF,SAASU,SAAS,GAAE;IAChB,MAAMF,YAAY,GAAGR,QAAQ,CAACE,IAAI,CAACS,KAAK;IACxC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,YAAY,CAACQ,MAAM,CAAC;IACpE,MAAMC,GAAG,GAAGT,YAAY,CAACI,YAAY,CAAC,CAACK,GAAG;IAC1Cd,OAAO,CACHe,QAAQ,KAAK;MACb,GAAGA,QAAQ;MACXX,GAAG,EAAEU;IACL,CAAC,CAAC,CACL;EACL;EAEA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAEI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,UAAU;QACtB,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QACtB,eACN;QACI,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,aAAa;QACzB,SAAS,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAC1B,eACF;QACI,SAAS,EAAC,cAAc;QACxB,OAAO,EAAEP,SAAU;QAAA,UACtB;MAED;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAK,GAAG,EAAER,IAAI,CAACK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACnB;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GA9CeN,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}